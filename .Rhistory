detach("package:base", unload = TRUE)
library(base, lib.loc = "C:/Program Files/R/R-4.1.3/library")
colorVec = rep(c("green","blue"), length.out=nrow(d))
wordcloud2(data=d,size=1,fontFamily="Arial",backgroundColor="White",
shape="oval",shuffle=TRUE,color=colorVec)
install.packages("wordcloud2", lib="C:/R-4.1.3/library")
colorVec = rep(c("green","blue"), length.out=nrow(d))
wordcloud2(data=d,size=1,fontFamily="Arial",backgroundColor="White",
shape="oval",shuffle=TRUE,color=colorVec)
shiny::runApp('C:/R shinny simulation/app.R')
runApp('C:/R shinny simulation/app.R')
runApp('C:/R shinny simulation/app.R')
runApp('C:/R shinny simulation/app.R')
runApp('C:/R shinny simulation/app.R')
runApp('C:/R shinny simulation/app.R')
runApp('C:/R shinny simulation/app.R')
shiny::runApp('C:/R shinny simulation/app.R')
runApp('C:/R shinny simulation/app.R')
shiny::runApp('C:/R shiny/GME/app-GME')
runApp('C:/R shiny/GME/app-GME')
runApp('C:/R shiny/GME/app-GME')
runApp('C:/R shiny/app-ts.R')
runApp('C:/R shiny/app_sw.R')
runApp('C:/R shiny/R shinny simulation/app_sim.R')
source("C:/R inclass/GME/GME assignment R.R", echo=TRUE)
source("C:/R inclass/GME/GME assignment R.R", echo=TRUE)
source("C:/R inclass/GME/GME assignment R.R", echo=TRUE)
runApp('C:/R shiny/GME/app-GME')
runApp('C:/R shiny/GME/app-GME')
runApp('C:/R shiny/GME/app-GME')
runApp('C:/R shiny/GME/app-GME')
runApp('C:/R shiny/GME/app-GME')
runApp('C:/R shiny/GME/app-GME')
library(lubridate)
library(openxlsx)
library(haven)
library(Hmisc)
library(corrplot)
library(gridExtra)
library(ggplot2)
library(dplyr)
library(zoo)
library(officer)
library(openxlsx)
library(data.table)
library(psych)
library(BatchGetSymbols)
install.packages("BatchGetSymbols", lib="C:/R-4.1.3/library")
source("C:/R shiny/batch.R", echo=TRUE)
source("C:/R shiny/batch.R", echo=TRUE)
df <- BatchGetSymbols(stklist,
first.date=first.date,
last.date=last.date,
freq.data = freq.data,
type.ret="arit",
do.cache=FALSE)
source("C:/R shiny/batch.R", echo=TRUE)
install.packages("PerformanceAnalytics", lib="C:/R-4.1.3/library")
install.packages("reshape2", lib="C:/R-4.1.3/library")
source("C:/R shiny/batch.R", echo=TRUE)
library(BatchGetSymbols)       # Get data from Yahoo! Finance
library(rvest)                 # Web scraping
library(dplyr)                 # Data manipulation
library(ggplot2)               # Plotting
library(ggthemes)              # Adding style
library(reshape2)              # Pivot data
library(tidyr)                 # Manipulate date (e.g., melt)
library(PerformanceAnalytics)  # Compounding (among other things)
library(psych)
source("C:/R shiny/batch.R", echo=TRUE)
install.packages(c("tidyr", "rvest"), lib="C:/R-4.1.3/library")
library(BatchGetSymbols)       # Get data from Yahoo! Finance
library(rvest)                 # Web scraping
library(dplyr)                 # Data manipulation
library(ggplot2)               # Plotting
library(ggthemes)              # Adding style
library(reshape2)              # Pivot data
library(tidyr)                 # Manipulate date (e.g., melt)
library(PerformanceAnalytics)  # Compounding (among other things)
library(psych)
source("C:/R shiny/batch.R", echo=TRUE)
source("C:/R shiny/batch.R", echo=TRUE)
install.packages("BatchGetSymbols", lib="C:/R-4.1.3/library")
source("C:/R shiny/batch.R", echo=TRUE)
library(BatchGetSymbols)       # Get data from Yahoo! Finance
library(rvest)                 # Web scraping
library(dplyr)                 # Data manipulation
library(ggplot2)               # Plotting
library(ggthemes)              # Adding style
library(reshape2)              # Pivot data
library(tidyr)                 # Manipulate date (e.g., melt)
library(PerformanceAnalytics)  # Compounding (among other things)
library(psych)
library(BatchGetSymbols)       # Get data from Yahoo! Finance
library(rvest)                 # Web scraping
library(dplyr)                 # Data manipulation
library(ggplot2)               # Plotting
library(ggthemes)              # Adding style
library(reshape2)              # Pivot data
library(tidyr)                 # Manipulate date (e.g., melt)
library(PerformanceAnalytics)  # Compounding (among other things)
library(psych)
stklist <- c("MSFT","FB","AAPL","TSLA")
first.date <- Sys.Date()-1200  # Set number of trading days to retrieve
last.date <- Sys.Date()        # Today's date for last date
freq.data <- 'daily'           # Frequency of data set to 'daily'
df <- BatchGetSymbols(stklist,
first.date=first.date,
last.date=last.date,
freq.data = freq.data,
type.ret="arit",
do.cache=FALSE)
df$df.tickers["plusone"] <- df$df.tickers["ret.adjusted.prices"]+1
df$df.tickers["plusone"][is.na(df$df.tickers["plusone"])] <- 1
df$df.tickers["value1"] <- cumprod(df$df.tickers["plusone"] )
ggplot(df$df.tickers,
aes(x=ref.date,y=value1,color=ticker))+
geom_line()+
facet_wrap(~ticker,scales="free_y")+  #fixed
theme_classic()
ggplot(df$df.tickers,
aes(x=ref.date,y=price.close,color=ticker))+
geom_line()+
facet_wrap(~ticker,scales="free_y")+
theme_classic()
ggplot(df$df.tickers,
aes(x=ref.date,y=volume/1000,color=ticker,fill=ticker))+
geom_col() + facet_wrap(~ticker,scales='free_y')+
ggtitle("Volume over time")+
theme_classic()
View(df)
source("C:/R shiny/batch.R", echo=TRUE)
ggplot(df$df.tickers,
aes(x=ref.date,y=value1,color=ticker))+
geom_line()+
facet_wrap(~ticker,scales="free_y")+  #fixed
theme_classic()
df <- BatchGetSymbols(stklist,
first.date=first.date,
last.date=last.date,
freq.data = freq.data,
type.ret="arit",
do.cache=FALSE)
stklist <- c("MSFT","FB","AAPL","TSLA")
first.date <- Sys.Date()-1200  # Set number of trading days to retrieve
last.date <- Sys.Date()        # Today's date for last date
freq.data <- 'daily'
df <- BatchGetSymbols(stklist,
first.date=first.date,
last.date=last.date,
freq.data = freq.data,
type.ret="arit",
do.cache=FALSE)
source("C:/R shiny/batch.R", echo=TRUE)
shiny::runApp('C:/R shiny/batch/app-batchmy')
runApp('C:/R shiny/app-ts.R')
runApp('C:/R shiny/app_sw.R')
runApp('C:/R shiny/app-ts.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/batch/app-batchmy')
runApp('C:/R shiny/example/RShiny Individual Assignment.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/example/RShiny Individual Assignment.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
source("C:/R inclass/GME/GME assignment R.R", echo=TRUE)
View(df1)
View(Trend)
View(GME)
View(GMEsub)
View(GMEsub)
View(GME)
library(shiny); runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
View(val)
View(perval)
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
View(df1cor)
runApp('C:/R shiny/GME/app-GME/app_gme.R')
library(shiny); runApp('C:/R shiny/R shinny simulation/app_sim.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
runApp('C:/R shiny/GME/app-GME/app_gme.R')
source("C:/R inclass/Final Challenge Notes.R", echo=TRUE)
